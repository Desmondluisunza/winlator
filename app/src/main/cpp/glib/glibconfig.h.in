/* glibconfig.h
 *
 * This is a generated file.  Please modify 'glibconfig.h.in'
 */

#ifndef __GLIBCONFIG_H__
#define __GLIBCONFIG_H__

#include <glib/gmacros.h>

#include <limits.h>
#include <float.h>
#cmakedefine GLIB_HAVE_ALLOCA_H

#cmakedefine GLIB_STATIC_COMPILATION
#cmakedefine GOBJECT_STATIC_COMPILATION
#cmakedefine GIO_STATIC_COMPILATION
#cmakedefine GMODULE_STATIC_COMPILATION
#cmakedefine GI_STATIC_COMPILATION
#cmakedefine G_INTL_STATIC_COMPILATION
#cmakedefine FFI_STATIC_BUILD

/* Specifies that GLib's g_print*() functions wrap the
 * system printf functions.  This is useful to know, for example,
 * when using glibc's register_printf_function().
 */
#cmakedefine GLIB_USING_SYSTEM_PRINTF

G_BEGIN_DECLS

#define G_MINFLOAT	FLT_MIN
#define G_MAXFLOAT	FLT_MAX
#define G_MINDOUBLE	DBL_MIN
#define G_MAXDOUBLE	DBL_MAX
#define G_MINSHORT	SHRT_MIN
#define G_MAXSHORT	SHRT_MAX
#define G_MAXUSHORT	USHRT_MAX
#define G_MININT	INT_MIN
#define G_MAXINT	INT_MAX
#define G_MAXUINT	UINT_MAX
#define G_MINLONG	LONG_MIN
#define G_MAXLONG	LONG_MAX
#define G_MAXULONG	ULONG_MAX

typedef signed char gint8;
typedef unsigned char guint8;

typedef signed @GINT16@ gint16;
typedef unsigned @GINT16@ guint16;

#define G_GINT16_MODIFIER "@GINT16_MODIFIER@"
#define G_GINT16_FORMAT "@GINT16_FORMAT@"
#define G_GUINT16_FORMAT "@GUINT16_FORMAT@"


typedef signed @GINT32@ gint32;
typedef unsigned @GINT32@ guint32;

#define G_GINT32_MODIFIER "@GINT32_MODIFIER@"
#define G_GINT32_FORMAT "@GINT32_FORMAT@"
#define G_GUINT32_FORMAT "@GUINT32_FORMAT@"


#define G_HAVE_GINT64 1          /* deprecated, always true */

@GLIB_EXTENSION@typedef signed @GINT64@ gint64;
@GLIB_EXTENSION@typedef unsigned @GINT64@ guint64;

#define G_GINT64_CONSTANT(val)	@GINT64_CONSTANT@
#define G_GUINT64_CONSTANT(val)	@GUINT64_CONSTANT@

#define G_GINT64_MODIFIER "@GINT64_MODIFIER@"
#define G_GINT64_FORMAT "@GINT64_FORMAT@"
#define G_GUINT64_FORMAT "@GUINT64_FORMAT@"


#define GLIB_SIZEOF_VOID_P @GLIB_VOID_P@
#define GLIB_SIZEOF_LONG   @GLIB_LONG@
#define GLIB_SIZEOF_SIZE_T @GLIB_SIZE_T@
#define GLIB_SIZEOF_SSIZE_T @GLIB_SSIZE_T@

typedef signed @GLIB_SIZE_TYPE_DEFINE@ gssize;
typedef unsigned @GLIB_SIZE_TYPE_DEFINE@ gsize;
#define G_GSIZE_MODIFIER "@GSIZE_MODIFIER@"
#define G_GSSIZE_MODIFIER "@GSSIZE_MODIFIER@"
#define G_GSIZE_FORMAT "@GSIZE_FORMAT@"
#define G_GSSIZE_FORMAT "@GSSIZE_FORMAT@"

#define G_MAXSIZE	G_MAXU@GLIB_MSIZE_TYPE@
#define G_MINSSIZE	G_MIN@GLIB_MSIZE_TYPE@
#define G_MAXSSIZE	G_MAX@GLIB_MSIZE_TYPE@

typedef gint64 goffset;
#define G_MINOFFSET	G_MININT64
#define G_MAXOFFSET	G_MAXINT64

#define G_GOFFSET_MODIFIER      G_GINT64_MODIFIER
#define G_GOFFSET_FORMAT        G_GINT64_FORMAT
#define G_GOFFSET_CONSTANT(val) G_GINT64_CONSTANT(val)

#define G_POLLFD_FORMAT "@G_POLLFD_FORMAT@"

#define GPOINTER_TO_INT(p)	((gint)  @GLIB_GPI_CAST@ (p))
#define GPOINTER_TO_UINT(p)	((guint) @GLIB_GPUI_CAST@ (p))

#define GINT_TO_POINTER(i)	((gpointer) @GLIB_GPI_CAST@ (i))
#define GUINT_TO_POINTER(u)	((gpointer) @GLIB_GPUI_CAST@ (u))

typedef signed @GLIB_INTPTR_TYPE_DEFINE@ gintptr;
typedef unsigned @GLIB_INTPTR_TYPE_DEFINE@ guintptr;

#define G_GINTPTR_MODIFIER      "@GINTPTR_MODIFIER@"
#define G_GINTPTR_FORMAT        "@GINTPTR_FORMAT@"
#define G_GUINTPTR_FORMAT       "@GUINTPTR_FORMAT@"

#define GLIB_MAJOR_VERSION @GLIB_MAJOR_VERSION@
#define GLIB_MINOR_VERSION @GLIB_MINOR_VERSION@
#define GLIB_MICRO_VERSION @GLIB_MICRO_VERSION@

@GLIB_OS@

#define G_VA_COPY va_copy
@GLIB_VACOPY@

#define G_HAVE_ISO_VARARGS 1

/* gcc-2.95.x supports both gnu style and ISO varargs, but if -ansi
 * is passed ISO vararg support is turned off, and there is no work
 * around to turn it on, so we unconditionally turn it off.
 */
#if __GNUC__ == 2 && __GNUC_MINOR__ == 95
#  undef G_HAVE_ISO_VARARGS
#endif

#cmakedefine G_HAVE_GROWING_STACK

#ifndef _MSC_VER
# define G_HAVE_GNUC_VARARGS 1
#endif

#if defined(__SUNPRO_C) && (__SUNPRO_C >= 0x590)
#define G_GNUC_INTERNAL __attribute__((visibility("hidden")))
#elif defined(__SUNPRO_C) && (__SUNPRO_C >= 0x550)
#define G_GNUC_INTERNAL __hidden
#elif defined (__GNUC__) && defined (G_HAVE_GNUC_VISIBILITY)
#define G_GNUC_INTERNAL __attribute__((visibility("hidden")))
#else
#define G_GNUC_INTERNAL
#endif

#define G_THREADS_ENABLED
#define G_THREADS_IMPL_@G_THREADS_IMPL_DEF@

#cmakedefine G_ATOMIC_LOCK_FREE

#define GINT16_TO_@G_BS_NATIVE@(val)	((gint16) (val))
#define GUINT16_TO_@G_BS_NATIVE@(val)	((guint16) (val))
#define GINT16_TO_@G_BS_ALIEN@(val)	((gint16) GUINT16_SWAP_LE_BE (val))
#define GUINT16_TO_@G_BS_ALIEN@(val)	(GUINT16_SWAP_LE_BE (val))

#define GINT32_TO_@G_BS_NATIVE@(val)	((gint32) (val))
#define GUINT32_TO_@G_BS_NATIVE@(val)	((guint32) (val))
#define GINT32_TO_@G_BS_ALIEN@(val)	((gint32) GUINT32_SWAP_LE_BE (val))
#define GUINT32_TO_@G_BS_ALIEN@(val)	(GUINT32_SWAP_LE_BE (val))

#define GINT64_TO_@G_BS_NATIVE@(val)	((gint64) (val))
#define GUINT64_TO_@G_BS_NATIVE@(val)	((guint64) (val))
#define GINT64_TO_@G_BS_ALIEN@(val)	((gint64) GUINT64_SWAP_LE_BE (val))
#define GUINT64_TO_@G_BS_ALIEN@(val)	(GUINT64_SWAP_LE_BE (val))

#define GLONG_TO_LE(val)	((glong) GINT@GLONGBITS@_TO_LE (val))
#define GULONG_TO_LE(val)	((gulong) GUINT@GLONGBITS@_TO_LE (val))
#define GLONG_TO_BE(val)	((glong) GINT@GLONGBITS@_TO_BE (val))
#define GULONG_TO_BE(val)	((gulong) GUINT@GLONGBITS@_TO_BE (val))
#define GINT_TO_LE(val)		((gint) GINT@GINTBITS@_TO_LE (val))
#define GUINT_TO_LE(val)	((guint) GUINT@GINTBITS@_TO_LE (val))
#define GINT_TO_BE(val)		((gint) GINT@GINTBITS@_TO_BE (val))
#define GUINT_TO_BE(val)	((guint) GUINT@GINTBITS@_TO_BE (val))
#define GSIZE_TO_LE(val)	((gsize) GUINT@GSIZEBITS@_TO_LE (val))
#define GSSIZE_TO_LE(val)	((gssize) GINT@GSIZEBITS@_TO_LE (val))
#define GSIZE_TO_BE(val)	((gsize) GUINT@GSIZEBITS@_TO_BE (val))
#define GSSIZE_TO_BE(val)	((gssize) GINT@GSIZEBITS@_TO_BE (val))
#define G_BYTE_ORDER @G_BYTE_ORDER@

#define GLIB_SYSDEF_POLLIN =@G_POLLIN@
#define GLIB_SYSDEF_POLLOUT =@G_POLLOUT@
#define GLIB_SYSDEF_POLLPRI =@G_POLLPRI@
#define GLIB_SYSDEF_POLLHUP =@G_POLLHUP@
#define GLIB_SYSDEF_POLLERR =@G_POLLERR@
#define GLIB_SYSDEF_POLLNVAL =@G_POLLNVAL@

/* No way to disable deprecation warnings for macros, so only emit deprecation
 * warnings on platforms where usage of this macro is broken */
#if defined(__APPLE__) || defined(_MSC_VER) || defined(__CYGWIN__)
#define G_MODULE_SUFFIX "@G_MODULE_SUFFIX@" GLIB_DEPRECATED_MACRO_IN_2_76
#else
#define G_MODULE_SUFFIX "@G_MODULE_SUFFIX@"
#endif

typedef @G_PID_TYPE@ GPid;
#define G_PID_FORMAT "@G_PID_FORMAT@"

#define GLIB_SYSDEF_AF_UNIX @G_AF_UNIX@
#define GLIB_SYSDEF_AF_INET @G_AF_INET@
#define GLIB_SYSDEF_AF_INET6 @G_AF_INET6@

#define GLIB_SYSDEF_MSG_OOB @G_MSG_OOB@
#define GLIB_SYSDEF_MSG_PEEK @G_MSG_PEEK@
#define GLIB_SYSDEF_MSG_DONTROUTE @G_MSG_DONTROUTE@

#define G_DIR_SEPARATOR '@G_DIR_SEPARATOR@'
#define G_DIR_SEPARATOR_S "@G_DIR_SEPARATOR@"
#define G_SEARCHPATH_SEPARATOR '@G_SEARCHPATH_SEPARATOR@'
#define G_SEARCHPATH_SEPARATOR_S "@G_SEARCHPATH_SEPARATOR@"

#cmakedefine G_HAVE_FREE_SIZED

G_END_DECLS

#endif /* __GLIBCONFIG_H__ */